<?php
/**
 * ControllerAbstract.php
 *
 * Base abstract class for all controllers in the application.
 * Provides a consistent interface for generating HTML output.
 *
 * Notes:
 * - Originally created by CF Ingrams for Web Application Development (CTEC2712_2023_603) lecture material.
 * - Previously used in the "CryptoShow" project and reused here without modifications.
 * - Simple and concise, no changes were necessary.
 *
 * Responsibilities:
 * - Store the generated HTML output
 * - Provide a getter for HTML output
 * - Force subclasses to implement `createHtmlOutput()`
 *
 * @author CF Ingrams
 * @copyright De Montfort University
 * @package Royal Silk Leicester
 */

abstract class ControllerAbstract
{
    /**
     * Holds the generated HTML output for the controller.
     * Subclasses populate this property in createHtmlOutput().
     *
     * @var string
     */
    protected $html_output;

    /**
     * Constructor initializes the HTML output to an empty string.
     */
    public final function __construct()
    {
        $this->html_output = '';
    }

    /**
     * Destructor (empty, included for consistency and possible future cleanup).
     */
    public final function __destruct() {}

    /**
     * Returns the HTML output generated by the controller.
     *
     * @return string The HTML content
     */
    public function getHtmlOutput(): string
    {
        return $this->html_output;
    }

    /**
     * Abstract method that subclasses must implement.
     * Responsible for building and populating $html_output.
     */
    abstract protected function createHtmlOutput();
}
